{"version":3,"sources":["components/Navigation/SideDrawer/SideDrawer.module.scss","components/Navigation/NavigationItems/NavigationItems.module.scss","components/Navigation/Toolbar/Toolbar.module.scss","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.scss","store/actions/deliveries.js","store/actions/login.js","store/actions/index.js","axios-interceptor.js","components/UI/Backdrop/Backdrop.js","hoc/Layout/layout.module.scss","components/assets/profile.svg","components/UI/Backdrop/Backdrop.module.css","components/Logo/Logo.module.scss","components/assets/logo.svg","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.scss","store/actions/actionTypes.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/SideDrawer.js","components/Logo/Logo.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","hoc/Layout/Layout.js","hoc/asyncComponent/asyncComponent.jsx","App.js","serviceWorker.js","store/reducers/deliveries.js","store/reducers/login.js","index.js"],"names":["module","exports","deliveries","name","email","dispatch","axios","post","then","res","deliveriesSuccess","data","catch","error","deliveriesFail","deliveriesData","type","ACTION_TYPES","login","instance","create","baseURL","Backdrop","props","show","className","styles","onClick","clicked","DELIVERIES","DELIVERIES_SUCCESS","DELIVERIES_FAIL","LOGIN","NavigationItem","exact","to","link","activeClassName","active","children","NavigationItems","this","length","profile","src","alt","downArrow","Component","connect","state","SideDrawer","attachedClasses","Close","open","Open","closed","join","Logo","isAuthenticated","isAuth","logo","DrawerToggle","Toolbar","drawerToggleClicked","DesktopOnly","Layout","showSideDrawer","sideDrawerClosedHandler","setState","drawerToggleHandler","prevState","Content","asyncComponent","importComponent","component","cmp","default","C","asyncLogin","asyncDashboard","App","onTryAutoLogin","history","push","routes","path","ACTIONS","withRouter","Boolean","window","location","hostname","match","initState","action","Object","assign","reducer","composeEnhancers","compose","rootReducer","combineReducers","deliveriesReducer","loginReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.184e39b1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__1d0LJ\",\"Open\":\"SideDrawer_Open__3IFQX\",\"Close\":\"SideDrawer_Close__3p6H_\",\"Logo\":\"SideDrawer_Logo__o47dL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__2hbvu\",\"profile\":\"NavigationItems_profile__1lHuI\",\"downArrow\":\"NavigationItems_downArrow__2MsC7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__2tk_z\",\"Logo\":\"Toolbar_Logo__1pnax\",\"DesktopOnly\":\"Toolbar_DesktopOnly__1EyPt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__20Eyr\",\"active\":\"NavigationItem_active__2V5__\"};","import * as ACTION_TYPES from \"./actionTypes\";\r\nimport axios from \"../../axios-interceptor\";\r\n\r\n\r\nexport const deliveries = (name,email) => {\r\n  return dispatch => {\r\n    axios\r\n      .post(name, { email: email })\r\n      .then(res => {\r\n        dispatch(deliveriesSuccess(res.data.data));\r\n      })\r\n      .catch(error => {\r\n        dispatch(deliveriesFail(error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const deliveriesSuccess = (deliveriesData) => {\r\n  return {\r\n    type: ACTION_TYPES.DELIVERIES_SUCCESS,\r\n    deliveriesData:deliveriesData\r\n  };\r\n};\r\n\r\nexport const deliveriesFail = (error) => {\r\n  return {\r\n    type: ACTION_TYPES.DELIVERIES_FAIL,\r\n    error: error\r\n  };\r\n};","import * as ACTION_TYPES from \"./actionTypes\";\r\n//import axios from \"../../axios-interceptor\";\r\n\r\n\r\nexport const login = (name,email) => {\r\n    return {\r\n        type: ACTION_TYPES.LOGIN,\r\n        name,\r\n        email\r\n    };\r\n};\r\n","export {\r\n  deliveries\r\n} from \"./deliveries\";\r\n\r\nexport {\r\n  login\r\n} from \"./login\";\r\n","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://93870v1pgk.execute-api.ap-south-1.amazonaws.com/latest/shipments/\"\r\n});\r\n\r\nexport default instance;","import React from \"react\";\r\nimport styles from \"./Backdrop.module.css\";\r\nconst Backdrop = props => {\r\n    return props.show ? <div className={styles.Backdrop}\r\n    onClick={props.clicked}></div> : null;\r\n};\r\n\r\n\r\nexport default Backdrop;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"layout_Content__3sG88\"};","module.exports = __webpack_public_path__ + \"static/media/profile.52b703a8.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__2n6L1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__O7jYZ\"};","module.exports = __webpack_public_path__ + \"static/media/logo.877653ae.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__2QgN7\"};","export const DELIVERIES = \"DELIVERIES\";\r\nexport const DELIVERIES_SUCCESS = \"DELIVERIES_SUCCESS\";\r\nexport const DELIVERIES_FAIL = \"DELIVERIES_FAIL\";\r\n\r\nexport const LOGIN = \"LOGIN\";\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport styles from \"./NavigationItem.module.scss\";\r\nimport {NavLink} from 'react-router-dom'\r\nconst NavigationItem = props => {\r\n    return (\r\n      <li className={styles.NavigationItem}>\r\n        <NavLink exact={props.exact} to={props.link} activeClassName={styles.active}>\r\n          {props.children}\r\n        </NavLink>\r\n      </li>\r\n    );\r\n}\r\n\r\nexport default NavigationItem\r\n","import React, { Component, Fragment } from 'react'\r\nimport styles from \"./NavigationItems.module.scss\";\r\nimport NavigationItem from \"./NavigationItem/NavigationItem\";\r\nimport profile from '../../assets/profile.svg'\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nclass NavigationItems extends Component {\r\n  render() {\r\n    return (\r\n      <ul className={styles.NavigationItems}>\r\n        {this.props.deliveriesData.length ?\r\n          <Fragment>\r\n          <NavigationItem link=\"/\" exact>Home</NavigationItem>\r\n          <NavigationItem link=\"/Brands\">Brands </NavigationItem>\r\n          <NavigationItem link=\"/Transporters\">Transporters</NavigationItem>\r\n          <NavigationItem link=\"/profile\"><div className={styles.profile}><img src={profile} alt=\"\" /></div></NavigationItem>\r\n          <NavigationItem link=\"/dropdown\"><div className={styles.downArrow}>&or;</div></NavigationItem>\r\n          </Fragment>\r\n          : null\r\n       }\r\n      </ul>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    deliveriesData: state.deliveries.deliveriesData,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(NavigationItems);\r\n","import React ,{Fragment} from 'react'\r\n//import Logo from '../../Logo/Logo'\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport styles from \"./SideDrawer.module.scss\";\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\n\r\nconst SideDrawer = (props) => {\r\n    let attachedClasses = [styles.SideDrawer, styles.Close]\r\n    if (props.open)\r\n        attachedClasses = [styles.SideDrawer, styles.Open];\r\n    return (\r\n      <Fragment>\r\n        <Backdrop show={props.open} clicked={props.closed} />\r\n        <div className={attachedClasses.join(' ')} onClick={props.closed}>\r\n          <div className={styles.Logo}>\r\n          \r\n          </div>\r\n          <nav>\r\n            <NavigationItems isAuthenticated={props.isAuth}/>\r\n          </nav>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n}\r\n\r\nexport default SideDrawer\r\n","import React from 'react'\r\nimport styles from './Logo.module.scss'\r\nimport logo from '../assets/logo.svg'\r\nconst Logo = (props) => {\r\n    return (\r\n        <div className={styles.Logo}>\r\n            <img src={logo} alt=\"Logo\" />Intugine\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Logo\r\n","import React from 'react'\r\nimport styles from './DrawerToggle.module.scss';\r\nconst DrawerToggle = (props) => {\r\n    return (\r\n        <div className={styles.DrawerToggle} onClick={props.clicked}>\r\n           <div></div>\r\n           <div></div>\r\n           <div></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DrawerToggle\r\n","import React from 'react'\r\nimport styles from './Toolbar.module.scss'\r\nimport Logo from '../../Logo/Logo'\r\nimport DrawerToggle from \"../SideDrawer/DrawerToggle/DrawerToggle\";\r\nimport NavigationItems from \"../NavigationItems/NavigationItems\";\r\nconst Toolbar = props => (\r\n  <header className={styles.Toolbar}>\r\n    <DrawerToggle clicked={props.drawerToggleClicked} />\r\n    <div className={styles.Logo}>\r\n      <Logo />\r\n    </div>\r\n    <nav className={styles.DesktopOnly}>\r\n      <NavigationItems isAuthenticated={props.isAuth}/>\r\n    </nav>\r\n  </header>\r\n);\r\n\r\nexport default Toolbar\r\n","import React, { Component,Fragment } from \"react\";\r\nimport styles from \"./layout.module.scss\";\r\nimport SideDrawer from \"../../components/Navigation/SideDrawer/SideDrawer\";\r\nimport Toolbar from \"../../components/Navigation/Toolbar/Toolbar\";\r\nclass Layout extends Component {\r\n    state = {\r\n        showSideDrawer: false\r\n    };\r\n    sideDrawerClosedHandler = () => {\r\n        this.setState({ showSideDrawer: false });\r\n    };\r\n    drawerToggleHandler = () => {\r\n        this.setState(prevState => {\r\n            return { showSideDrawer: !prevState.showSideDrawer };\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Toolbar\r\n                    isAuth={true}\r\n                    drawerToggleClicked={this.drawerToggleHandler}\r\n                />\r\n                <SideDrawer\r\n                    isAuth={true}\r\n                    open={this.state.showSideDrawer}\r\n                    closed={this.sideDrawerClosedHandler}\r\n                />\r\n                <main className={styles.Content}>{this.props.children}</main>\r\n            </Fragment>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Layout;\r\n","import React, { Component } from \"react\";\r\n\r\nconst asyncComponent = importComponent => {\r\n  return class extends Component {\r\n    state = {\r\n      component: null\r\n    };\r\n\r\n    componentDidMount() {\r\n      importComponent().then(cmp => {\r\n        this.setState({ component: cmp.default });\r\n      });\r\n    }\r\n\r\n    render() {\r\n      const C = this.state.component;\r\n\r\n      return C ? <C {...this.props} /> : null;\r\n    }\r\n  };\r\n};\r\n\r\nexport default asyncComponent;\r\n","import React, { Component } from \"react\";\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport * as ACTIONS from './store/actions/index'\nimport Layout from \"./hoc/Layout/Layout\";\n\nimport asyncComponent from './hoc/asyncComponent/asyncComponent';\n\nconst asyncLogin = asyncComponent(() => {\n  return import(\"./container/login\");\n});\nconst asyncDashboard = asyncComponent(() => {\n  return import(\"./container/dashboard\");\n});\nclass App extends Component {\n  componentDidMount() {\n    this.props.onTryAutoLogin();\n    if (!this.props.login.name) {\n      this.props.history.push('/login')\n    } \n  } render() {\n    let routes = (\n      <Switch>\n        <Route path=\"/login\" exact component={asyncLogin} />\n      </Switch>\n    );\n    if (this.props.login.name) {\n      routes = (\n        <Switch>\n          <Route path=\"/\" exact component={asyncDashboard} />\n          <Redirect to=\"/\" />\n        </Switch>\n      );\n    }\n\n    return (\n      <div>\n        <Layout>\n          {routes}\n        </Layout>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    login: state.login\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoLogin: () => dispatch(ACTIONS.login())\n  }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(withRouter(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as ACTION_TYPES from \"../actions/actionTypes\";\r\nconst initState = {\r\n  deliveriesData: []\r\n};\r\n\r\nconst deliveries = (state, action) => {\r\n  return state\r\n};\r\nconst deliveriesSuccess = (state, action) => {\r\n  const updatedState = Object.assign({}, state, {\r\n    deliveriesData: action.deliveriesData\r\n  })\r\n  return updatedState\r\n}\r\nconst reducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case ACTION_TYPES.DELIVERIES_SUCCESS:\r\n      return deliveriesSuccess(state, action);\r\n    case ACTION_TYPES.DELIVERIES:\r\n      return deliveries(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import * as ACTION_TYPES from \"../actions/actionTypes\";\r\nconst initState = {\r\n    name: null,\r\n    email: null\r\n};\r\n\r\nconst login = (state, action) => {\r\n    const updatedState = Object.assign({}, state, {\r\n        name: action.name,\r\n        email: action.email\r\n    })\r\n    return updatedState\r\n};\r\n\r\nconst reducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case ACTION_TYPES.LOGIN:\r\n            return login(state, action);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk'\n\nimport deliveriesReducer from \"./store/reducers/deliveries\";\nimport loginReducer from \"./store/reducers/login\";\n\nconst composeEnhancers = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\n\nconst rootReducer = combineReducers({\n    deliveries: deliveriesReducer,\n    login: loginReducer\n})\nconst store = createStore(\n    rootReducer,\n    composeEnhancers(applyMiddleware(thunk))\n);\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}